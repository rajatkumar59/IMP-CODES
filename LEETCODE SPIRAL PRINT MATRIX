//solved in leetcode in medium category
#include<bits/stdc++.h>
using namespace std;

 vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int>ans;
        int m=matrix.size();
         int n=matrix[0].size();
         int total=m*n;
         int srow=0;    //starting Row
         int ecol=n-1;  //ending column
         int erow=m-1;  //ending row
         int scol=0;    //starting column

         int cnt=0;

         while(cnt<total){
             for(int i=scol;i<=ecol&&cnt<total;i++){
                 ans.push_back(matrix[srow][i]);
                 cnt++;
             }
             srow++;

             for(int i=srow;i<=erow&&cnt<total;i++){
                 ans.push_back(matrix[i][ecol]);
                 cnt++;
             }
             ecol--;

             for(int i=ecol;i>=scol&&cnt<total;i--){
                 ans.push_back(matrix[erow][i]);
                 cnt++;
             }
             erow--;

             for(int i=erow;i>=srow&&cnt<total;i--){
                 ans.push_back(matrix[i][scol]);
                 cnt++;
             }
             scol++;
         }return ans;
    }

 
int main(){
    vector<vector<int>>matrix={{1,2,3,4},{5,6,7,8},{9,10,11,12}};
    vector<int>n=spiralOrder(matrix);
    for(auto it:n){
        cout<<it<<" ";
    }
    return 0;
}
